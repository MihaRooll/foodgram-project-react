name: foodgram_react_workflow

on: [push]

jobs:

  flake8:
    name: Lint with flake8
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
          cd backend/
          pip install -r requirements.txt

      - name: Run flake8 tests
        run: |
          python -m flake8

  build_and_push_to_docker_hub:
    name: Build and push Docker image
    runs-on: ubuntu-latest
    needs: flake8
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push backend Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./backend/
          file: ./backend/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/foodgram-backend:latest

      - name: Build and push frontend Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./frontend/
          file: ./frontend/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/foodgram-frontend:latest
  
  deploy:
    name: Deploy to server
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    steps:
      - name: Execute remote SSH commands
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          script: |
            sudo docker pull miharoll/foodgram:v.01
            sudo docker pull miharoll/foodgram_frontend:v.1
            sudo docker-compose stop
            sudo docker-compose rm web
            rm .env
            touch .env
            echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
            echo DB_NAME=${{ secrets.DB_NAME }} >> .env
            echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
            echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
            echo DB_HOST=${{ secrets.DB_HOST }} >> .env
            echo DB_PORT=${{ secrets.DB_PORT }} >> .env
            echo SECRET_KEY=${{ secrets.SECRET_KEY }} >> .env
            echo ALLOWED_HOSTS=${{ secrets.ALLOWED_HOSTS }} >> .env
            sudo docker-compose up -d
            sudo docker-compose exec web python manage.py makemigrations
            sudo docker-compose exec web python manage.py migrate
            docker-compose exec web python manage.py collectstatic --no-input
            docker-compose exec web python manage.py load_ingredients
            sudo docker system prune -af
            sudo docker volume prune -f

  send_message:
    name: Send Telegram notification
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Send Telegram message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: ${{ github.workflow }} completed successfully!
